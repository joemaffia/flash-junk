/*	CASA Framework for ActionScript 2.0	Copyright (C) 2007  CASA Framework	http://casaframework.org		This library is free software; you can redistribute it and/or	modify it under the terms of the GNU Lesser General Public	License as published by the Free Software Foundation; either	version 2.1 of the License, or (at your option) any later version.		This library is distributed in the hope that it will be useful,	but WITHOUT ANY WARRANTY; without even the implied warranty of	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU	Lesser General Public License for more details.		You should have received a copy of the GNU Lesser General Public	License along with this library; if not, write to the Free Software	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA*//**	Util functions for detecting SWF's file location.		@author Aaron Clinger	@version 02/13/07*/class org.casaframework.util.LocationUtil {		/**		Determines if the SWF is being served on the internet.				@param location: MovieClip to get location of.		@return Returns <code>true</code> if SWF is being served on the internet; otherwise <code>false</code>.		@usage			<code>				trace(LocationUtil.isWeb(_root));			</code>	*/	public static function isWeb(location:MovieClip):Boolean {		return location._url.substr(0, 4) == 'http';	}		/**		Determines if the SWF is running in a browser plug-in.				@return Returns <code>true</code> if SWF is running in the Flash Player browser plug-in; otherwise <code>false</code>.	*/	public static function isPlugin():Boolean {		return System.capabilities.playerType == 'PlugIn' || System.capabilities.playerType == 'ActiveX';	}		/**		Determines if the SWF is running in the IDE.				@return Returns <code>true</code> if SWF is running in the Flash Player version used by the external player or test movie mode; otherwise <code>false</code>.	*/	public static function isIde():Boolean {		return System.capabilities.playerType == 'External';	}		/**		Determines if the SWF is running in the StandAlone player.				@return Returns <code>true</code> if SWF is running in the Flash StandAlone Player; otherwise <code>false</code>.	*/	public static function isStandAlone():Boolean {		return System.capabilities.playerType == 'StandAlone';	}		/**		Detects if MovieClip's embed location matches passed domain. 				@param location: MovieClip to compare location of.		@param domain: Web domain.		@return  Returns <code>true</code> if file's embed location matched passed domain; otherwise <code>false</code>.		@usage			To check for domain:			<code>				trace(LocationUtil.isDomain(_root, "google.com"));				trace(LocationUtil.isDomain(_root, "bbc.co.uk"));			</code>						You can even check for subdomains:			<code>				trace(LocationUtil.isDomain(_root, "subdomain.aaronclinger.com"))			</code>	*/	public static function isDomain(location:MovieClip, domain:String):Boolean {		return LocationUtil.getDomain(location).slice(-domain.length) == domain;	}		/**		Detects MovieClip's domain location.				@param location: MovieClip to get location of.		@return Returns full domain (including sub-domains) of MovieClip's location.		@usage			<code>				trace(LocationUtil.getDomain(_root));			</code>		@usageNote Function does not return folder path or file name. The method also treats "www" and sans "www" as the same; if "www" is present method does not return it.	*/	public static function getDomain(location:MovieClip):String {		var baseUrl:String = location._url.split('://')[1].split('/')[0];		return (baseUrl.substr(0, 4) == 'www.') ? baseUrl.substr(4) : baseUrl;	}		private function LocationUtil() {} // Prevents instance creation}